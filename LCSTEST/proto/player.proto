syntax = "proto2";

import "goodsResp.proto";
import "gamePlayerInstance.proto";
import "gamePlayerInstanceBase.proto";
import "playerAndDebrisResp.proto";
import "playerAndPropertyResp.proto";
import "propResp.proto";
import "gameTeamInfo.proto";
import "teaminfoAndPropListResp.proto";
import "gameProperty.proto";
import "gameUserDebris.proto";
import "playerTrain.proto";

//获取玩家物品列表（总接口）
message C2GS_GoodsList {
	repeated int32 typeList = 1;
}

//返回玩家物品列表（总接口）
message GS2C_GoodsList {
	//物品vo
	optional GoodsRespVo goodsRespVo = 1;
	
	//总默契等级
	optional int32 totalTacitLevel = 2;
}

//球员升级列表
message C2GS_PlayerUpgrade {
	//required PlayerUpgradeReqVo playerUpgradeReqVo = 1;
	//球员id
	required int32 playerId = 1;
	
	//道具集合
	repeated GameProperty propertyList = 2;
}

//返回球员升级
message GS2C_PlayerUpgrade {
	//球员详情
	//optional PlayerAndPropertyRespVo playerAndPropertyRespVo = 1;
	required GamePlayerInstance playerRespVo = 1;
	
	//升级道具集合
	repeated GameProperty propertyList = 2;
} 

//球员升星
message C2GS_PlayerUpstar {
	//球员id
	required int32 playerId = 1;
}

//返回球员升星
message GS2C_PlayerUpstar {
	//球员详情
	//optional PropertyUpStarRespVo propertyUpStarRespVo = 1;
	//球员详细信息
	optional GamePlayerInstance playerRespVo = 1;
	
	//升级道具集合
	optional GameProperty property = 2;
	
	//欧元数
	optional int32 coin = 3;
	
	//碎片信息
	optional GameUserDebris debrisRespVo = 4;
} 

//球员合成
message C2GS_PlayerCompound {
	//碎片id
	required int32 debridId = 1;
}
//返回球员合成
message GS2C_PlayerCompound {
	//球员信息和碎片信息
	//optional PlayerAndDebrisRespVo respVo = 1;
	//球员信息
	optional GamePlayerInstance playerRespVo = 1;
	
	//球员碎片信息
	optional GameUserDebris debrisRespVo = 2;
	
	//英超球员数量
	optional int32 yingchaoNum = 3;
	//西甲球员数量
	optional int32 xijiaNum = 4;
	//意甲球员数量
	optional int32 yijiaNum = 5;
	//德甲球员数量
	optional int32 dejiaNum = 6;
	//世界球员数量
	optional int32 shijieNum = 7;
}

//球员体能恢复
message C2GS_RecoverTineng {
	//恢复的方式  1单体恢复  2恢复满
	required int32 recoverMode = 1;
	required int32 playerId = 2;
}
//返回球员体能恢复
message GS2C_RecoverTineng {
	//球员和道具信息
	//optional PlayerAndPropertyRespVo playerAndPropertyRespVo = 1;
	//球员详细信息
	optional GamePlayerInstance playerRespVo = 1;
	
	//道具集合
	optional GameProperty property = 2;
}

//球员状态恢复
message C2GS_RecoverZhuangtai {
	//恢复的方式  1单体恢复  2恢复满
	required int32 recoverMode = 1;
	required int32 playerId = 2;
}
//返回球员状态恢复
message GS2C_RecoverZhuangtai {
	//球员和道具信息
	//optional PlayerAndPropertyRespVo playerAndPropertyRespVo = 2;
	//球员详细信息
	optional GamePlayerInstance playerRespVo = 1;
	
	//道具集合
	optional GameProperty property = 2;
}

//球员伤病恢复
message C2GS_RecoverShangbing {
	//恢复的方式  1单体恢复  2恢复满
	required int32 recoverMode = 1;
	required int32 playerId = 2;
}
//返回球员伤病恢复
message GS2C_RecoverShangbing {
	//球员和道具信息
	//optional PlayerAndPropertyRespVo playerAndPropertyRespVo = 3;
	//球员详细信息
	optional GamePlayerInstance playerRespVo = 1;
	
	//道具集合
	optional GameProperty property = 2;
}

//球员默契升级
message C2GS_UpGradePlayerTracitUnderstanding {
	
	optional int32 playerId = 1;
	
	repeated PropRespVo propRespVo = 2;
	// 1为前锋 2为中场 3为后卫 4为门将
	required int32 type = 3;
}

message GS2C_UpGradePlayerTracitUnderstanding {
	
	optional GamePlayerInstance gamePlayerInstance = 1;
	
	repeated PropRespVo propRespVo = 2;
	// 
	optional int32 totalTacitLevel = 3;
}

//球员解约
message C2GS_CancelContract {
	//球员列表id
	repeated int32 playerIdList = 1;
}

//返回球员解约
message GS2C_CancelContract {
	//道具列表
	repeated PropRespVo propRespVoList = 1;
}

//球员重生
message C2GS_PlayerRebirth {
	//球员id
	required int32 playerId = 1;
}

//返回球员重生
message GS2C_PlayerRebirth {
	//经理人信息
	optional GameTeamInfo gameTeamInfo = 2;

	//道具列表
	repeated PropRespVo propRespVoList = 1;
}

//球员碎片出售
message C2GS_SalePlayerDebrisNum {
	//球员碎片id
	required int32 playerDebrisId = 1;
	//球员碎片数量
	required int32 playerDebrisNum = 2;
}
//
message GS2C_SalePlayerDebrisNum {
	//用户信息
	optional GameTeamInfo gameTeamInfo = 1;
	
	//道具列表
	repeated PropRespVo propRespVoList = 2;
}

//删除新球员标记
message C2GS_DeleteTag {
	//球员id
	required int32 playerId = 1;
}

message GS2C_DeleteTag {

}

// 球员强化
message C2GS_PlayerGradation {
	// 强化的球员id
	required int32 playerId = 1;
	// 消耗的球员id列表
	repeated int32 consumePlayerIds = 2;
	// 是否使用强化保护道具
	optional bool itemUse = 3; 
}

// 
message GS2C_PlayerGradation {
	// 返回的球员信息
	required GamePlayerInstance player = 1;
	// 强化状态值 0表示成功，1表示失败，2表示保护
	required int32 result = 2;
	// 消耗的道具信息
    optional PropRespVo prop =  3;
}

//服务器主动推送球员状态刷新数据
message GS2C_RefreshZhuangtai {
	
}

//获取最新的球员状态列表
message C2GS_GetPlayerZhuangtai {
}

message GS2C_GetPlayerZhuangtai {
	//只会返回球员唯一playerId和状态字段
	repeated GamePlayerInstanceBase playerList = 1;
}

//特训
message C2GS_PlayerTrain{
	//球员唯一id
	required int32 playerId = 1;
	//属性id
	required int32 attrId = 2;
	//特训类型 1：普通；2：快速
	required int32 type = 3;
}

message GS2C_PlayerTrain{	
	//特训后的球员信息
	required GamePlayerInstance instance = 1;
	//返回剩余特训道具
	optional GameProperty gameProperty = 2;
	//返回剩余钻石
	optional GameTeamInfo gameTeamInfo = 3;
}

//特训加速
message C2GS_PlayerTrainSpeedup{
	//球员唯一id
	required int32 playerId = 1;
	//属性id
	required int32 attrId = 2;	
	//特训加速类型 1：钻石；2：道具
	required int32 type = 3;
}

message GS2C_PlayerTrainSpeedup{
	//特训后的球员信息
	required GamePlayerInstance instance = 1;
	//返回剩余特训道具
	optional GameProperty gameProperty = 2;
	//返回剩余钻石
	optional GameTeamInfo gameTeamInfo = 3;
}

//特训完成
message C2GS_PlayerTrainFinish{
	//球员唯一id
	required int32 playerId = 1;
	//属性id
	required int32 attrId = 2;
}

message GS2C_PlayerTrainFinish{
	//特训后的球员信息
	required GamePlayerInstance instance = 1;
}